/*
 * «p» - число пи
 * «E» - модуль упругости материала
 * «L0» - первоначальная длинна болванки
 * «D0» - первоначальеый диаметр болванки
 * «P» - растягивающая сила, прилагаемая к болванке
 * «F0» - площадь поперечного сечения растягиваемой части болванки
 * «dL» - дельта длины, разница между первоначальной длиной болванки и длиной болванки после растяжения
 * «L1» - длина болванки после растяжения
 * «q» - напряжение во время растяжения
 * «T» - работа деформации до предела упругости
 * «Tl» - работа деформации до момнета разрыва
 * «Pmax» - нагрузка равная пределу прочгости
 */
const double p = Math.PI;                                                               // Константа числа пи
double E = 0.675 * Math.Pow(10, 6);                                                     // Модуль упругости алюминия
int Pmax = 90;                                                                          // Предел прочности алюминия
double L0, D0, P;                                                                       // Переменные, которые задаются пользователем
double F0, dL, L1, q;                                                                   // Переменные которые расчитываются
double T, Tl;

Console.Write("Введите измеренный диаметр образца (см): ");                             // Ввод диаметра образца
D0 = Convert.ToDouble(Console.ReadLine());                                              //

Console.Write("Введите измеренную длину образца (см): ");                               // Ввод длины образца
L0 = Convert.ToDouble(Console.ReadLine());                                              //

/*
Console.Write("Введите модуль упругости: ");                                            // Ввод модуля упругости
E = Convert.ToDouble(Console.ReadLine());
*/

Console.Write("Введите силу растяжения образца (кг): ");                                // Ввод силы растяжения образца
P = Convert.ToDouble(Console.ReadLine());                                               //

calculations();                                                                         // Вызов функции расчёта удлинения образца
stretching_work();                                                                      // Вызов функции расчёта нагрузки до разрушения

Console.WriteLine($"\nОбразец удленился на: {Math.Round(dL, 2)} см");                   //
Console.WriteLine($"Итоговая длина образца {Math.Round(L1, 2)} см");                    //
Console.WriteLine($"Напряжение в болванке в ходе растяжения {Math.Round(q, 2)}");       //
Console.WriteLine($"\nРабота до предела текучести {Math.Round(T, 2)}");                 //
Console.WriteLine($"Работа от предела текучести до разрыва {Math.Round(Tl, 2)}");       //


void calculations()                                                                     // Функция для расчёта удлинения образца
{
    F0 = (p * Math.Pow(D0, 2)) / 4;                                                     // Расчёт поперечного сечения образца
    dL = (P * L0) / (E * F0);                                                           // Расчёт на сколько растянуля образец
    L1 = dL + L0;                                                                       // Итоговая длина образца
    q = P / F0;                                                                         // Расчёт напряжения во время растяжения образца
}

void stretching_work()                                                                  // Расчёт значений для графика
{
    T = (Math.Pow(dL, 2) * E * F0) / 2 * L0;                                            // Расчёт работы до предела упругой деформации
    Tl = 0.9 * Pmax * dL;                                                               // Расчёт работы до момента разрыва
}